{
stats<-1
fact<-0
for(j in 1:ncolSumstat)
{
if( ((stats -1) %% ntargPop) == 0 )
{
fact<-fact+1
#print(popFact[fact])
}
#print(i)
#print(j)
ddd<-x[i,j]
ddd<-ddd * sqrt(popFact[fact])
replace(scaled.sumstat, c(i, j), i)
stats<-stats+1
}
}
library(devtools)
#library(abc)
library(plotrix)
library(ggplot2)
library(cowplot)
library(ggpubr)
#1.1: Input settings
setwd("./")
load_all('../../ABCAnalysisLib/abc-master/R')
params<-read.csv("parametersMasonCSV.csv",header=TRUE)
results<-read.csv("resultsMasonCSV.csv",header=TRUE)
targets<-read.csv("targetsMasonCSV.csv",header=TRUE)
popFact<-read.csv("popFact.csv",header=TRUE)
#1.1: Input settings
setwd("./")
getwd()
library(devtools)
#library(abc)
library(plotrix)
library(ggplot2)
library(cowplot)
library(ggpubr)
#1.1: Input settings
setwd("./")
load_all('../../ABCAnalysisLib/abc-master/R')
params<-read.csv("parametersMasonCSV.csv",header=TRUE)
results<-read.csv("resultsMasonCSV.csv",header=TRUE)
targets<-read.csv("targetsMasonCSV.csv",header=TRUE)
popFact<-read.csv("popFact.csv",header=TRUE)
tol<-0.0003
load_all('../../ABCAnalysisLib/abc-master/R')
abc.rej.1<-abc(target=targets,param=params,sumstat=results
,popFact=popFact,method="rejection", tol=tol)
#1.1: Input settings
setwd("./")
getwd()
